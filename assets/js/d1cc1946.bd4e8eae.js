"use strict";(self.webpackChunk_lexical_website=self.webpackChunk_lexical_website||[]).push([[9172],{48951:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=r(31085),o=r(71184);const i={sidebar_position:3},a="Theming",s={id:"getting-started/theming",title:"Theming",description:"Lexical tries to make theming straight-forward, by providing a way of passing a customizable theming object that maps CSS class names to the editor on creation. Here's an example of a plain-text theme:",source:"@site/docs/getting-started/theming.md",sourceDirName:"getting-started",slug:"/getting-started/theming",permalink:"/docs/getting-started/theming",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/lexical/tree/main/packages/lexical-website/docs/getting-started/theming.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"Getting Started with React",permalink:"/docs/getting-started/react"},next:{title:"Supported Browsers",permalink:"/docs/getting-started/supported-browsers"}},d={},l=[];function c(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"theming",children:"Theming"})}),"\n",(0,n.jsx)(t.p,{children:"Lexical tries to make theming straight-forward, by providing a way of passing a customizable theming object that maps CSS class names to the editor on creation. Here's an example of a plain-text theme:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"const exampleTheme = {\r\n  ltr: 'ltr',\r\n  rtl: 'rtl',\r\n  paragraph: 'editor-paragraph',\r\n};\n"})}),"\n",(0,n.jsx)(t.p,{children:"In your CSS, you can then add something like:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-css",children:".ltr {\r\n  text-align: left;\r\n}\r\n\r\n.rtl {\r\n  text-align: right;\r\n}\r\n\r\n.editor-placeholder {\r\n  color: #999;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  top: 15px;\r\n  left: 15px;\r\n  user-select: none;\r\n  pointer-events: none;\r\n}\r\n\r\n.editor-paragraph {\r\n  margin: 0 0 15px 0;\r\n  position: relative;\r\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["To apply it, you need to pass it to your editor instance. If you're using a framework like React, this is done by\r\npassing it as a property of the ",(0,n.jsx)(t.code,{children:"initialConfig"})," to ",(0,n.jsx)(t.code,{children:"<LexicalComposer>"}),", like shown:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-jsx",children:"import {LexicalComposer} from '@lexical/react/LexicalComposer';\r\nimport {PlainTextPlugin} from '@lexical/react/LexicalPlainTextPlugin';\r\nimport {ContentEditable} from '@lexical/react/LexicalContentEditable';\r\nimport {exampleTheme} from './exampleTheme';\r\nimport {LexicalErrorBoundary} from '@lexical/react/LexicalErrorBoundary';\r\n\r\nconst initialConfig = {namespace: 'MyEditor', theme: exampleTheme};\r\n\r\nexport default function Editor() {\r\n  return (\r\n    <LexicalComposer initialConfig={initialConfig}>\r\n      <PlainTextPlugin\r\n        contentEditable={<ContentEditable />}\r\n        placeholder={<div className=\"editor-placeholder\">Enter some text...</div>}\r\n        ErrorBoundary={LexicalErrorBoundary}\r\n      />\r\n    </LexicalComposer>\r\n  );\r\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["If you are using vanilla JS, you can pass it to the ",(0,n.jsx)(t.code,{children:"createEditor()"})," function, like shown:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"import {createEditor} from 'lexical';\r\n\r\nconst editor = createEditor({\r\n  namespace: 'MyEditor',\r\n  theme: exampleTheme,\r\n});\n"})}),"\n",(0,n.jsx)(t.p,{children:"Many of the Lexical's core nodes also accept theming properties. Here's a more comprehensive theming object:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"const exampleTheme = {\r\n  ltr: 'ltr',\r\n  rtl: 'rtl',\r\n  paragraph: 'editor-paragraph',\r\n  quote: 'editor-quote',\r\n  heading: {\r\n    h1: 'editor-heading-h1',\r\n    h2: 'editor-heading-h2',\r\n    h3: 'editor-heading-h3',\r\n    h4: 'editor-heading-h4',\r\n    h5: 'editor-heading-h5',\r\n    h6: 'editor-heading-h6',\r\n  },\r\n  list: {\r\n    nested: {\r\n      listitem: 'editor-nested-listitem',\r\n    },\r\n    ol: 'editor-list-ol',\r\n    ul: 'editor-list-ul',\r\n    listitem: 'editor-listItem',\r\n    listitemChecked: 'editor-listItemChecked',\r\n    listitemUnchecked: 'editor-listItemUnchecked',\r\n  },\r\n  hashtag: 'editor-hashtag',\r\n  image: 'editor-image',\r\n  link: 'editor-link',\r\n  text: {\r\n    bold: 'editor-textBold',\r\n    code: 'editor-textCode',\r\n    italic: 'editor-textItalic',\r\n    strikethrough: 'editor-textStrikethrough',\r\n    subscript: 'editor-textSubscript',\r\n    superscript: 'editor-textSuperscript',\r\n    underline: 'editor-textUnderline',\r\n    underlineStrikethrough: 'editor-textUnderlineStrikethrough',\r\n  },\r\n  code: 'editor-code',\r\n  codeHighlight: {\r\n    atrule: 'editor-tokenAttr',\r\n    attr: 'editor-tokenAttr',\r\n    boolean: 'editor-tokenProperty',\r\n    builtin: 'editor-tokenSelector',\r\n    cdata: 'editor-tokenComment',\r\n    char: 'editor-tokenSelector',\r\n    class: 'editor-tokenFunction',\r\n    'class-name': 'editor-tokenFunction',\r\n    comment: 'editor-tokenComment',\r\n    constant: 'editor-tokenProperty',\r\n    deleted: 'editor-tokenProperty',\r\n    doctype: 'editor-tokenComment',\r\n    entity: 'editor-tokenOperator',\r\n    function: 'editor-tokenFunction',\r\n    important: 'editor-tokenVariable',\r\n    inserted: 'editor-tokenSelector',\r\n    keyword: 'editor-tokenAttr',\r\n    namespace: 'editor-tokenVariable',\r\n    number: 'editor-tokenProperty',\r\n    operator: 'editor-tokenOperator',\r\n    prolog: 'editor-tokenComment',\r\n    property: 'editor-tokenProperty',\r\n    punctuation: 'editor-tokenPunctuation',\r\n    regex: 'editor-tokenVariable',\r\n    selector: 'editor-tokenSelector',\r\n    string: 'editor-tokenSelector',\r\n    symbol: 'editor-tokenProperty',\r\n    tag: 'editor-tokenProperty',\r\n    url: 'editor-tokenOperator',\r\n    variable: 'editor-tokenVariable',\r\n  },\r\n};\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},71184:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>s});var n=r(14041);const o={},i=n.createContext(o);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);
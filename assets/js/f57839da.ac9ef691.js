"use strict";(self.webpackChunk_lexical_website=self.webpackChunk_lexical_website||[]).push([[8604],{39232:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var a=t(31085),n=t(71184);const s={custom_edit_url:"https://github.com/facebook/lexical/tree/main/packages/lexical-headless/README.md"},o="@lexical/headless",l={id:"packages/lexical-headless",title:"@lexical/headless",description:"See API Documentation",source:"@site/docs/packages/lexical-headless.md",sourceDirName:"packages",slug:"/packages/lexical-headless",permalink:"/docs/packages/lexical-headless",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/lexical/tree/main/packages/lexical-headless/README.md",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/facebook/lexical/tree/main/packages/lexical-headless/README.md"},sidebar:"docs",previous:{title:"@lexical/hashtag",permalink:"/docs/packages/lexical-hashtag"},next:{title:"@lexical/history",permalink:"/docs/packages/lexical-history"}},i={},c=[];function d(e){const r={a:"a",code:"code",h1:"h1",header:"header",img:"img",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"lexicalheadless",children:(0,a.jsx)(r.code,{children:"@lexical/headless"})})}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.a,{href:"https://lexical.dev/docs/api/modules/lexical_headless",children:(0,a.jsx)(r.img,{src:"https://lexical.dev/img/see-api-documentation.svg",alt:"See API Documentation"})})}),"\n",(0,a.jsx)(r.p,{children:"This package allows you to interact with Lexical in a headless environment (one that does not rely on DOM, e.g. for Node.js environment), and use its\r\nmain features like editor.update(), editor.registerNodeTransform(), editor.registerUpdateListener()\r\nto create, update or traverse state."}),"\n",(0,a.jsxs)(r.p,{children:["Install ",(0,a.jsx)(r.code,{children:"@lexical/headless"}),":"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:"npm install --save @lexical/headless\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-js",children:"const { createHeadlessEditor } = require('@lexical/headless');\r\n\r\nconst editor = createHeadlessEditor({\r\n  nodes: [],\r\n  onError: () => {},\r\n});\r\n\r\neditor.update(() => {\r\n  $getRoot().append(\r\n    $createParagraphNode().append(\r\n      $createTextNode('Hello world')\r\n    )\r\n  )\r\n});\n"})}),"\n",(0,a.jsx)(r.p,{children:"Any plugins that do not rely on DOM could also be used. Here's an example of how\r\nyou can convert lexical editor state to markdown on server:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-js",children:"const { createHeadlessEditor } = require('@lexical/headless');\r\nconst { $convertToMarkdownString, TRANSFORMERS } = require('@lexical/markdown');\r\n\r\napp.get('article/:id/markdown', async (req, res) => {\r\n  const editor = createHeadlessEditor({\r\n    nodes: [],\r\n    onError: () => {},\r\n  });\r\n\r\n  const articleEditorStateJSON = await loadArticleBody(req.query.id);\r\n  editor.setEditorState(editor.parseEditorState(articleEditorStateJSON));\r\n\r\n  editor.update(() => {\r\n    const markdown = $convertToMarkdownString(TRANSFORMERS);\r\n    res.send(markdown);\r\n  });\r\n});\r\n\n"})})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},71184:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>l});var a=t(14041);const n={},s=a.createContext(n);function o(e){const r=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),a.createElement(s.Provider,{value:r},e.children)}}}]);
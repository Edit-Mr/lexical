"use strict";(self.webpackChunk_lexical_website=self.webpackChunk_lexical_website||[]).push([[6432],{16504:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>h,contentTitle:()=>n,default:()=>o,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var l=t(31085),i=t(71184);const a={id:"lexical_hashtag",title:"Module: @lexical/hashtag",custom_edit_url:null},n=void 0,d={id:"api/modules/lexical_hashtag",title:"Module: @lexical/hashtag",description:"Classes",source:"@site/docs/api/modules/lexical_hashtag.md",sourceDirName:"api/modules",slug:"/api/modules/lexical_hashtag",permalink:"/docs/api/modules/lexical_hashtag",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"lexical_hashtag",title:"Module: @lexical/hashtag",custom_edit_url:null},sidebar:"api",previous:{title:"@lexical/file",permalink:"/docs/api/modules/lexical_file"},next:{title:"@lexical/headless",permalink:"/docs/api/modules/lexical_headless"}},h={},c=[{value:"Classes",id:"classes",level:2},{value:"Functions",id:"functions",level:2},{value:"$createHashtagNode",id:"createhashtagnode",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"$isHashtagNode",id:"ishashtagnode",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4}];function r(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.h2,{id:"classes",children:"Classes"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"/docs/api/classes/lexical_hashtag.HashtagNode",children:"HashtagNode"})}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"functions",children:"Functions"}),"\n",(0,l.jsx)(s.h3,{id:"createhashtagnode",children:"$createHashtagNode"}),"\n",(0,l.jsxs)(s.p,{children:["\u25b8 ",(0,l.jsx)(s.strong,{children:"$createHashtagNode"}),"(",(0,l.jsx)(s.code,{children:"text?"}),"): ",(0,l.jsx)(s.a,{href:"/docs/api/classes/lexical_hashtag.HashtagNode",children:(0,l.jsx)(s.code,{children:"HashtagNode"})})]}),"\n",(0,l.jsx)(s.p,{children:"Generates a HashtagNode, which is a string following the format of a # followed by some text, eg. #lexical."}),"\n",(0,l.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(s.table,{children:[(0,l.jsx)(s.thead,{children:(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(s.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(s.th,{style:{textAlign:"left"},children:"Default value"}),(0,l.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(s.tbody,{children:(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.code,{children:"text"})}),(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.code,{children:"string"})}),(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.code,{children:"''"})}),(0,l.jsx)(s.td,{style:{textAlign:"left"},children:"The text used inside the HashtagNode."})]})})]}),"\n",(0,l.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,l.jsx)(s.p,{children:(0,l.jsx)(s.a,{href:"/docs/api/classes/lexical_hashtag.HashtagNode",children:(0,l.jsx)(s.code,{children:"HashtagNode"})})}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"The HashtagNode with the embedded text."}),"\n"]}),"\n",(0,l.jsx)(s.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,l.jsx)(s.p,{children:(0,l.jsx)(s.a,{href:"https://github.com/facebook/lexical/tree/main/packages/lexical-hashtag/src/LexicalHashtagNode.ts#L69",children:"packages/lexical-hashtag/src/LexicalHashtagNode.ts:69"})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"ishashtagnode",children:"$isHashtagNode"}),"\n",(0,l.jsxs)(s.p,{children:["\u25b8 ",(0,l.jsx)(s.strong,{children:"$isHashtagNode"}),"(",(0,l.jsx)(s.code,{children:"node"}),"): node is HashtagNode"]}),"\n",(0,l.jsx)(s.p,{children:"Determines if node is a HashtagNode."}),"\n",(0,l.jsx)(s.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,l.jsxs)(s.table,{children:[(0,l.jsx)(s.thead,{children:(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(s.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(s.tbody,{children:(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.code,{children:"node"})}),(0,l.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,l.jsx)(s.code,{children:"undefined"})," | ",(0,l.jsx)(s.code,{children:"null"})," | ",(0,l.jsx)(s.a,{href:"/docs/api/classes/lexical.LexicalNode",children:(0,l.jsx)(s.code,{children:"LexicalNode"})})]}),(0,l.jsx)(s.td,{style:{textAlign:"left"},children:"The node to be checked."})]})})]}),"\n",(0,l.jsx)(s.h4,{id:"returns-1",children:"Returns"}),"\n",(0,l.jsx)(s.p,{children:"node is HashtagNode"}),"\n",(0,l.jsx)(s.p,{children:"true if node is a HashtagNode, false otherwise."}),"\n",(0,l.jsx)(s.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,l.jsx)(s.p,{children:(0,l.jsx)(s.a,{href:"https://github.com/facebook/lexical/tree/main/packages/lexical-hashtag/src/LexicalHashtagNode.ts#L78",children:"packages/lexical-hashtag/src/LexicalHashtagNode.ts:78"})})]})}function o(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(r,{...e})}):r(e)}},71184:(e,s,t)=>{t.d(s,{R:()=>n,x:()=>d});var l=t(14041);const i={},a=l.createContext(i);function n(e){const s=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),l.createElement(a.Provider,{value:s},e.children)}}}]);
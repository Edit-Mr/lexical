"use strict";(self.webpackChunk_lexical_website=self.webpackChunk_lexical_website||[]).push([[1695],{78372:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=n(31085),a=n(71184);const r={sidebar_position:2},o="Creating a React Plugin",s={id:"react/create_plugin",title:"Creating a React Plugin",description:"In addition to using the Lexical React plugins offered by the core library, you can make your own plugins to extend or alter Lexical's functionality to suit your own use cases.",source:"@site/docs/react/create_plugin.md",sourceDirName:"react",slug:"/react/create_plugin",permalink:"/docs/react/create_plugin",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/lexical/tree/main/packages/lexical-website/docs/react/create_plugin.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Lexical Plugins",permalink:"/docs/react/plugins"},next:{title:"React FAQ",permalink:"/docs/react/faq"}},c={},l=[];function d(e){const t={a:"a",code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"creating-a-react-plugin",children:"Creating a React Plugin"})}),"\n",(0,i.jsx)(t.p,{children:"In addition to using the Lexical React plugins offered by the core library, you can make your own plugins to extend or alter Lexical's functionality to suit your own use cases."}),"\n",(0,i.jsx)(t.p,{children:"Lexical's React plugin interface is simple - just create a React component and add it as a child of your LexicalComposer component:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",children:" <LexicalComposer>\r\n    <MyLexicalPlugin>\r\n </LexicalComposer>\n"})}),"\n",(0,i.jsxs)(t.p,{children:["If the Plugin introduces new nodes, they have to be registered in ",(0,i.jsx)(t.code,{children:"initialConfig.nodes"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:'const initialConfig = {\r\n  namespace: "MyEditor",\r\n  nodes: [MyLexicalNode],\r\n};\n'})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",children:" <LexicalComposer initialConfig={initialConfig}>\r\n    <MyLexicalPlugin>\r\n </LexicalComposer>\n"})}),"\n",(0,i.jsx)(t.p,{children:"LexicalComposer provides access to the underlying LexicalEditor instance via React Context:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",children:"//MyLexicalPlugin.js\r\n\r\nexport function MyLexicalPlugin(props) {\r\n    const [editor] = useLexicalComposerContext();\r\n    ...\r\n}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["With access to the Editor, your plugin can extend Lexical via ",(0,i.jsx)(t.a,{href:"https://lexical.dev/docs/concepts/commands",children:"Commands"}),", ",(0,i.jsx)(t.a,{href:"https://lexical.dev/docs/concepts/transforms",children:"Transforms"}),", or other APIs. For example, the ",(0,i.jsx)(t.a,{href:"https://github.com/facebook/lexical/blob/0775ab929e65723433626fa8c25900941e7f232f/packages/lexical-playground/src/plugins/TwitterPlugin/index.ts#L18",children:"TwitterPlugin"})," embeds a tweet into the editor, fetching the data asynchronously from Twitter based on the provided Tweet ID:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",children:"export const INSERT_TWEET_COMMAND: LexicalCommand<string> = createCommand();\r\n\r\nexport default function TwitterPlugin(): JSX.Element | null {\r\n  const [editor] = useLexicalComposerContext();\r\n\r\n  useEffect(() => {\r\n    if (!editor.hasNodes([TweetNode])) {\r\n      throw new Error('TwitterPlugin: TweetNode not registered on editor (initialConfig.nodes)');\r\n    }\r\n\r\n    return editor.registerCommand<string>(\r\n      INSERT_TWEET_COMMAND,\r\n      (payload) => {\r\n        const tweetNode = $createTweetNode(payload);\r\n        $insertNodeToNearestRoot(tweetNode);\r\n\r\n        return true;\r\n      },\r\n      COMMAND_PRIORITY_EDITOR,\r\n    );\r\n  }, [editor]);\r\n\r\n  return null;\r\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"TwitterPlugin is just a React component that accesses the Lexical editor via React Context (useLexicalComposerContext). Using the LexicalEditor instance, this plugin does two things:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Verifies that there is a TweetNode registered on the editor (if you forget to register the node, you can't do #2)"}),"\n",(0,i.jsx)(t.li,{children:'registers a "command", passing a callback that will run when that command is dispatched. The command callback creates and inserts a TweetNode in the editor.'}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["You can see how it's used in the playground ",(0,i.jsx)(t.a,{href:"https://github.com/facebook/lexical/blob/0775ab929e65723433626fa8c25900941e7f232f/packages/lexical-playground/src/Editor.tsx#L137",children:"here"}),". It's added it as a child of a LexicalComposer component, which does the job of providing the Context necessary for access to the editor instance. To actually trigger this command callback and insert a ",(0,i.jsx)(t.a,{href:"https://github.com/facebook/lexical/blob/b0fa38615c03f1c4fc7c8c5ea26412b723770e55/packages/lexical-playground/src/nodes/TweetNode.tsx#L212",children:"TweetNode"}),", we have a ",(0,i.jsx)(t.a,{href:"https://github.com/facebook/lexical/blob/b0fa38615c03f1c4fc7c8c5ea26412b723770e55/packages/lexical-playground/src/plugins/ToolbarPlugin.tsx#L534",children:"button"}),' that "dispatches" the Tweet command we registered in the plugin.']}),"\n",(0,i.jsxs)(t.p,{children:["While the TwitterPlugin registers a command that inserts a custom node, this is only one example of what can be done with a plugin. To get a better idea of what's possible, take a look at the ",(0,i.jsx)(t.a,{href:"https://github.com/facebook/lexical/tree/0775ab929e65723433626fa8c25900941e7f232f/packages/lexical-playground/src/plugins",children:"plugins defined in the playground"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},71184:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var i=n(14041);const a={},r=i.createContext(a);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);